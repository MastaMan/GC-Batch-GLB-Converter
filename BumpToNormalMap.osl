// Converts Bump/Height Map to Normal Map
// BumpToNormalMap.osl, by MastaMan (https://3dground.net)
// Modified: 2024-08-08
// Copyright 2024 3D GROUND, All rights reserved. This file is licensed under Apache 2.0 license
// https://3dground.net
	
shader BumpToNormalMap
[[ string label   = "Bump To Normal Map",
   string help    = "<h3>Bump To Normal Map</h3> <p>v1.0.0</p> <a href='https://3dground.net'>https://3dground.net</a>",
   string category = "NomralBump", 
   string version = "1.0.0"
]]	
(
    string Filename = ""
    [[ string widget="filename",
		   int autopop = 0 ]],
    output color normalOutput = color(0.5, 0.5, 1.0)
)
{
	/*
		BumpToNormalMap
		v1.0.0
		MastaMan
		https://3dground.net
	*/

    float radius = 0.65;
    float scale = 0.95;
    float z_power = 0.5;
	float size = 2048.0;

    float ulookup = u;
    float vlookup = 1.0 - v;
    
    color bumpColor = texture(Filename, ulookup, vlookup);
    float height = bumpColor[0];

    float texel_size = 1.0 / size; 

    float height_left = texture(Filename, ulookup - texel_size, vlookup);
    float height_right = texture(Filename, ulookup + texel_size, vlookup);
    float height_up = texture(Filename, ulookup, vlookup + texel_size);
    float height_down = texture(Filename, ulookup, vlookup - texel_size);

    float dx = (height_right - height_left) * scale;
    float dy = (height_up - height_down) * scale;

    vector nrm = normalize(vector(dx, dy, 1.0));
    nrm[2] = nrm[2] * z_power;

    normalOutput = color(nrm[0] * 0.5 + 0.5, nrm[1] * 0.5 + 0.5, nrm[2] * 0.5 + 0.5);
    
    float gamma = 2.2;
    color gammaCorrectedNormal = color(
        pow(nrm[0] * 0.5 + 0.5, gamma),
        pow(nrm[1] * 0.5 + 0.5, gamma),
        pow(nrm[2] * 0.5 + 0.5, gamma)
    );

    normalOutput = gammaCorrectedNormal;
}